window.onload=function(){"use strict";var code,duration,sound;var version=32;var history=[];var count=0;var richNotifications=true;var slowcount=0;var slowlevel=0;var actionList={};var iconList={};var DEFAULT_CODE=null;var DEFAULT_DURATION=7e3;var DEFAULT_SOUND=false;var DEBUG=false;chrome.browserAction.setPopup({popup:chrome.i18n.getMessage("extension_popup")});var audio=null;try{audio=new Audio("sounds/new.ogg")}catch(error){console.log(error)}var socket=io.connect("https://desktopnotifications.hci.simtech.uni-stuttgart.de:10935",{"max reconnection attempts":Infinity,"force new connection":true});chrome.storage.sync.get(["code","duration","sound"],function(items){code=items.code||DEFAULT_CODE;duration=items.duration||DEFAULT_DURATION;sound=items.sound||DEFAULT_SOUND;socketSubscribe(code)});chrome.storage.onChanged.addListener(function(changes,namespace){if(namespace!="sync")return;for(var key in changes){var oldcode=code;switch(key){case"code":code=changes[key].newValue||DEFAULT_CODE;break;case"duration":duration=changes[key].newValue||DEFAULT_DURATION;break;case"sound":sound=changes[key].newValue||DEFAULT_SOUND;break}if(key=="code"&&code!=""){if(DEBUG)console.log("code changed");showNotification({"package":"_setup",title:chrome.i18n.getMessage("setup_complete"),content:"",info:"",appname:"Android Desktop Notifications",limited:0})}if(key=="code"){socketUpdate(oldcode,code)}}slowcount=0});function loadConfig(path,callback){var xhr=new XMLHttpRequest;xhr.open("GET",chrome.extension.getURL(path),true);xhr.onload=function(){var json=JSON.parse(xhr.responseText);if(json!=null)callback(json)};xhr.send()}loadConfig("/config/actions.json",function(json){actionList=json});loadConfig("/config/icons.json",function(json){iconList=json});try{chrome.runtime.getPlatformInfo(function(info){if(info.os=="linux"){richNotifications=false}})}catch(error){console.log(error)}function getSlowlevel(slowcount){var slowlevel;if(slowcount>=96){slowlevel=5}else if(slowcount>=48){slowlevel=4}else if(slowcount>=24){slowlevel=3}else if(slowcount>=12){slowlevel=2}else if(slowcount>=6){slowlevel=1}else{slowlevel=0}return slowlevel}function get(){if(!navigator.onLine||!code)return;slowlevel=getSlowlevel(slowcount);slowcount++;if(slowlevel>0&&slowcount%(slowlevel+1)!=0){return}var params="code="+encodeURIComponent(code);var req=new XMLHttpRequest;req.open("POST","https://projects.hci.simtech.uni-stuttgart.de/tapsnap/notification/php/get.php?version="+version+"&slowlevel="+slowlevel,true);req.setRequestHeader("Content-type","application/x-www-form-urlencoded");req.onload=function(){var json=JSON.parse(req.responseText);if(json==null){return}json=json.filter(function(item){return history.indexOf(item.id)==-1});history=[];if(json.length==0){return}for(var i=0;i<json.length;i++){showNotification(json[i]);history.push(json[i].id)}if(sound&&audio)audio.play();slowcount=0};req.send(params)}setInterval(get,1e4);function showClassicNotification(title,message){var n=webkitNotifications.createNotification("images/icon48.png",title,message);n.onclick=function(event){event.currentTarget.cancel()};if(duration>0){n.ondisplay=function(event){setTimeout(function(){event.currentTarget.cancel()},duration)}}n.show()}function showNotification(n){var id=n.package;if(!richNotifications){if(n.limited!==undefined&&n.limited==1){showClassicNotification("Android Desktop Notifications",n.appname)}else{showClassicNotification(n.title,n.content)}return}if(actionList[id]!==undefined){var buttons=[{title:chrome.i18n.getMessage(actionList[id]["title"])}]}else{buttons=[]}var opt={};if(n.limited!==undefined&&n.limited==1){opt={type:"basic",title:"Android Desktop Notifications",message:n.appname,iconUrl:"images/icon_rich_80.png",priority:2,buttons:buttons}}else{var info=n.info==""?"":"("+n.info+")";opt={type:"list",title:n.appname,message:"",iconUrl:"images/icon_rich_80.png",priority:2,items:[{title:n.title,message:info},{title:n.content,message:""}],buttons:buttons}}if(n.icon!==undefined&&n.icon!=""){opt.iconUrl=createRichNotificationIcon(n.icon)}else{if(iconList[n.package]!==undefined){opt.iconUrl="images/appicons/"+iconList[n.package]}}chrome.notifications.clear(id,function(){});chrome.notifications.create(id,opt,function(id){if(duration>0){setTimeout(function(){chrome.notifications.clear(id,function(){})},duration)}count++;chrome.browserAction.setBadgeText({text:count.toString()})})}function createRichNotificationIcon(ic){var canvas=document.createElement("canvas");canvas.width=80;canvas.height=80;var ctx=canvas.getContext("2d");ctx.fillStyle="#f0f0f0";ctx.fillRect(0,0,canvas.width,canvas.height);var icon=new Image;icon.src="data:image/png;base64,"+ic;if(icon.width>72){icon.width=72}if(icon.height>72){icon.height=72}var x=Math.round((canvas.width-icon.width)/2);var y=Math.round((canvas.height-icon.height)/2);ctx.drawImage(icon,x,y,icon.width,icon.height);return canvas.toDataURL()}if(richNotifications){chrome.notifications.onClosed.addListener(function(id){count--;if(count<=0){chrome.browserAction.setBadgeText({text:""})}else{chrome.browserAction.setBadgeText({text:count.toString()})}});chrome.notifications.onButtonClicked.addListener(function(id,index){if(actionList[id]!==undefined){window.open(actionList[id]["url"])}})}socket.on("connect",function(){if(DEBUG)console.log("socket connect");chrome.browserAction.setIcon({path:"images/icon5_19.png"});socketSubscribe(code)});socket.on("connecting",function(){if(DEBUG)console.log("socket connecting")});socket.on("disconnect",function(){if(DEBUG)console.log("socket disconnect");chrome.browserAction.setIcon({path:"images/icon5_19_disconnect.png"})});socket.on("connect_failed",function(){if(DEBUG)console.log("socket connect_failed")});socket.on("error",function(){if(DEBUG)console.log("socket error");if(navigator.onLine){chrome.browserAction.setIcon({path:"images/icon5_19_error.png"})}});socket.on("reconnect_failed",function(){if(DEBUG)console.log("socket reconnect_failed")});socket.on("reconnect",function(){if(DEBUG)console.log("socket reconnect");socketSubscribe(code)});socket.on("reconnecting",function(){if(DEBUG)console.log("socket reconnecting")});window.addEventListener("online",function(){if(DEBUG)console.log("online event");socket.socket.connect()});window.addEventListener("offline",function(){if(DEBUG)console.log("offline event");socket.socket.disconnect()});function socketSubscribe(code){if(DEBUG)console.log("socketSubscribe() was called");if(code&&code!=null&&code!=""){code.split(",",3).forEach(function(c){if(DEBUG)console.log("subscribe to "+c.trim());socket.emit("subscribe",c.trim())})}}function socketUnsubscribe(code){if(DEBUG)console.log("socketUnsubscribe() was called");if(code&&code!=null&&code!=""){code.split(",",3).forEach(function(c){if(DEBUG)console.log("unsubscribe from "+c.trim());socket.emit("unsubscribe",c.trim())})}}function socketUpdate(oldcode,newcode){if(DEBUG)console.log("socketUpdate() was called");socketUnsubscribe(oldcode);socketSubscribe(newcode)}socket.on("notification",function(json){if(DEBUG)console.log(json);if(json){showNotification(json);if(sound&&audio)audio.play()}})};